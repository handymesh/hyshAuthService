apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "goAuth.fullname" . }}
  labels:
    app: {{ template "goAuth.name" . }}
    chart: {{ template "goAuth.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
      annotations:
{{ toYaml .Values.server.podAnnotations | indent 8 }}
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name: {{ template "goAuth.fullname" . }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.imagePullPolicy }}
          enableServiceLinks: false
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          env:
            - name: PORT
              value: "{{ .Values.server.env.PORT }}"
            - name: MONGO_URL
              value: "{{ .Values.server.env.MONGO_URL }}"
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.server.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/cert/private_key.pem
              subPath: private_key.pem
            - name: config-volume
              mountPath: /app/cert/public_key.pub
              subPath: public_key.pub
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "goAuth.fullname" . }}
    {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
    {{- end }}
