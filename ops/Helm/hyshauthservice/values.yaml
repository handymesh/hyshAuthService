# Default values for hyshauthservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "570176851856.dkr.ecr.us-west-2.amazonaws.com/hysh-auth-service-dev"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "tagged"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  # serviceType ClusterIP.
  type: ClusterIP
  port: 4070
  name: access
  externalPort: 80
  ## serviceType LoadBalancer.
  # type: LoadBalancer
  ## nodePort port number
  ## Is not required, but allows for static port assignment with
  ## serviceType NodePort.
  ## Default: nil
  # nodePort: 30000
env:
- name: MONGO_URL
  value: "mongodb://hyshauthservice-mongodb:27017/auth"
- name: REDIS_URL
  value: "redis://hyshauthservice-redis-madter:6379/1"

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  enabled: false

networkPolicy:
  ## Specifies whether a NetworkPolicy should be created
  ##
  enabled: true
  apiVersion: networking.k8s.io/v1

  ## The Policy model to apply. When set to false, only pods with the correct
  ## client label will have network access to the port Redis is listening
  ## on. When true, Redis will accept connections from any source
  ## (with the correct destination port).
  ##
  # allowExternal: true

mongodb:
  # image:
  # imagePullPolicy:
  # mongodbRootPassword:
  # mongodbUsername:
  # mongodbPassword:
  # mongodbDatabase:
  # serviceType:
  persistence:
    enabled: false
    # storageClass:
    # accessMode: ReadWriteOnce
    # size: 8Gi

redis:
  networkPolicy:
    enabled: false

  serviceAccount:
    ## Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: hyshauthservice

  rbac:
    create: false
